
#### animationscript function main #####
# data/chars/Cody/Cody_end1.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==1)
    {
        if(frame==1)
        {
            DeControl(0, 1);
        }
        if(frame==1)
        {
            DeControl(1, 1);
        }
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==2)
    {
        if(frame==7)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==3)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Cody/Cody_end2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==4)
    {
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==5)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        if(frame==2)
        {
            degravity(0.3);
        }
        if(frame==3)
        {
            degravity(0.3);
        }
        if(frame==4)
        {
            degravity(0.3);
        }
        if(frame==5)
        {
            degravity(0.3);
        }
        if(frame==6)
        {
            degravity(0.3);
        }
        if(frame==7)
        {
            degravity(0.3);
        }
        if(frame==8)
        {
            degravity(0.3);
        }
        if(frame==9)
        {
            degravity(0.3);
        }
        if(frame==10)
        {
            degravity(0.3);
        }
        if(frame==11)
        {
            degravity(0.3);
        }
        if(frame==12)
        {
            degravity(0.3);
        }
        if(frame==13)
        {
            degravity(0.3);
        }
        if(frame==14)
        {
            degravity(0.3);
        }
        if(frame==15)
        {
            degravity(0.3);
        }
        if(frame==16)
        {
            degravity(0.3);
        }
        if(frame==17)
        {
            degravity(0.3);
        }
        if(frame==18)
        {
            degravity(0.3);
        }
        if(frame==19)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==6)
    {
        if(frame==6)
        {
            anichange("ANI_Follow3");
        }
        return;
    }
    if(animhandle==7)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        if(frame==2)
        {
            degravity(0.3);
        }
        if(frame==3)
        {
            degravity(0.3);
        }
        if(frame==4)
        {
            degravity(0.3);
        }
        if(frame==5)
        {
            degravity(0.3);
        }
        if(frame==6)
        {
            anichange("ani_walkoff");
        }
        return;
    }
    if(animhandle==8)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "Subject_to_platform", 0);
    changeentityproperty(self, "Subject_to_MinZ", 0);
    changeentityproperty(self, "Subject_to_MaxZ", 0);
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.1, 1, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Cody/Cody2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==10)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");

    if(frame>0 && PScore>8000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==12)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);	 // Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);		  // Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Cody__", 1); // Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }
    if(animhandle==14)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);

    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==26)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==30)
    {
        if(frame==0)
        {
            slamstart2();
        }
        if(frame==0)
        {
            depost2(20, 1, 0, 1);
        }
        if(frame==0)
        {
            position(0, 18, 1, 0, -1);
        }
        if(frame==1)
        {
            throw(15, 3, 3, 3, 0, 1);
        }
        if(frame==1)
        {
            depost(0);
        }
        if(frame==1)
        {
            clearGrab();
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Cody/Cody.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==32)
    {
        if(frame==0)
        {
            DeControl(0, 0);
        }
        if(frame==0)
        {
            DeControl(1, 0);
        }
        if(frame==1)
        {
            DeControl(0, 0);
        }
        if(frame==1)
        {
            DeControl(1, 0);
        }
        return;
    }
    if(animhandle==33)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");
    if(frame>0 && PScore>10000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==35)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);	 // Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);		  // Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Cody_", 1); // Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }
    if(animhandle==37)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);

    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==49)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==52)
    {
        if(frame==1)
        {
            slamstart2();
        }
        if(frame==1)
        {
            depost2(0, 1, 0, 1);
        }
        if(frame==1)
        {
            position(1, -5, 1, 0, -1);
        }
        if(frame==2)
        {
            position(1, -10, 15, 0, -1);
        }
        if(frame==3)
        {
            throw(10, 2, 1.2, 1.4, 0, 1);
        }
        if(frame==3)
        {
            depost(0);
        }
        if(frame==3)
        {
            clearGrab();
        }
        return;
    }
    if(animhandle==54)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==55)
    {
        if(frame==6)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==13)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0, 0, 0);
        }
        return;
    }
    if(animhandle==56)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==57)
    {

    void self = getlocalvar("self");
    void P1 = getplayerproperty(0, "entity");
    void P2 = getplayerproperty(1, "entity");
    int eTime = openborvariant("elapsed_time");
        if(frame==0)
        {
            Join(1);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==2)
        {
            degravity(0.5);
        }
        if(frame==2)
        {
            dasher(0.3, 0.6, 0);
        }
        if(frame==8)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0, 0, 0);
        }
        if(frame==9)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==24)
        {
            Join(0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Cody/Cody3.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==58)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==61)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);

    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==73)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==78)
    {
        if(frame==0)
        {
            slamstart2();
        }
        if(frame==0)
        {
            depost2(20, 1, 0, 1);
        }
        if(frame==0)
        {
            position(0, 18, 1, 0, -1);
        }
        if(frame==1)
        {
            throw(15, 3, 3, 3, 0, 1);
        }
        if(frame==1)
        {
            depost(0);
        }
        if(frame==1)
        {
            clearGrab();
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Guy/Guy2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==80)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");

    if(frame>0 && PScore>6000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        return;
    }
    if(animhandle==81)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");

    if(frame>0 && PScore>6000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        return;
    }
    if(animhandle==82)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);	 // Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);		  // Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Guy__", 1); // Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }

}

#### animationscript function main #####
# data/chars/Guy/Guy_end1.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==102)
    {
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==103)
    {
        if(frame==8)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==104)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Guy/Guy_end2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==105)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==106)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==19)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==107)
    {
        if(frame==5)
        {
            anichange("ANI_Follow3");
        }
        return;
    }
    if(animhandle==108)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==1)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==7)
        {
            anichange("ani_walkoff");
        }
        return;
    }
    if(animhandle==109)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "Subject_to_platform", 0);
    changeentityproperty(self, "Subject_to_MinZ", 0);
    changeentityproperty(self, "Subject_to_MaxZ", 0);
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.1, 1, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Guy/Guy.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==111)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");
    if(frame>0 && PScore>8000){
      performattack(self, openborconstant("ANI_Follow1"));      
    }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==113)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);	// Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);		// Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Guy_", 1);	// Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }
    if(animhandle==115)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);

    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==127)
    {
        if(frame==0)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==131)
    {
        if(frame==0)
        {
            slamstart2();
        }
        if(frame==0)
        {
            depost2(0, 1, 0, 1);
        }
        if(frame==0)
        {
            position(1, -5, 5, 0, 0);
        }
        if(frame==1)
        {
            position(1, -25, 20, 0, 0);
        }
        if(frame==2)
        {
            throw(10, 2, 1.4, 1.7, 0, 1);
        }
        if(frame==2)
        {
            depost(0);
        }
        if(frame==2)
        {
            clearGrab();
        }
        return;
    }
    if(animhandle==132)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==133)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==134)
    {

    void self = getlocalvar("self");
    void P1 = getplayerproperty(0, "entity");
    void P2 = getplayerproperty(1, "entity");
    int eTime = openborvariant("elapsed_time");
        if(frame==0)
        {
            Join(1);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==2)
        {
            degravity(0.5);
        }
        if(frame==2)
        {
            dasher(0.3, 0.6, 0);
        }
        if(frame==8)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0, 0, 0);
        }
        if(frame==9)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==25)
        {
            Join(0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/haggar/Haggar2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==157)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");

    if(frame>0 && PScore>10000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        return;
    }
    if(animhandle==158)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");

    if(frame>0 && PScore>10000){
      performattack(self, openborconstant("ANI_follow1"));      
    }
        return;
    }
    if(animhandle==159)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);	 // Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);		  // Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Haggar__", 1); // Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }

}

#### animationscript function main #####
# data/chars/Haggar/Haggar_end1.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==178)
    {
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==179)
    {
        if(frame==7)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==180)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Haggar/Haggar_end2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==181)
    {
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }
    if(animhandle==182)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==19)
        {
            anichange("Ani_Follow2");
        }
        return;
    }
    if(animhandle==183)
    {
        if(frame==6)
        {
            anichange("ANI_Follow3");
        }
        return;
    }
    if(animhandle==184)
    {
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==7)
        {
            anichange("ani_walkoff");
        }
        return;
    }
    if(animhandle==185)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "Subject_to_platform", 0);
    changeentityproperty(self, "Subject_to_MinZ", 0);
    changeentityproperty(self, "Subject_to_MaxZ", 0);
        if(frame==0)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.1, 1, 0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/haggar/Haggar.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==187)
    {

    void self = getlocalvar("self");
    int PIndex = getentityproperty(self,"playerindex");
    int PScore = getplayerproperty(PIndex, "score");
    if(frame>0 && PScore>15000){
      performattack(self, openborconstant("ANI_Follow1"));      
    }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==1)
        {
            degravity(0.3);
        }
        return;
    }
    if(animhandle==188)
    {

	if(frame==0){
    void self = getlocalvar("self");
	changeentityproperty(self, "maxhealth", 90);		// Установить Максимальное кол-во ХП
	changeentityproperty(self, "Health", 90);			// Установить "Жизни", кол-во ХП
	changeentityproperty(self, "model", "Haggar_", 1);	// Установить индекс, "модель", "ИМЯ", значения.
		}
        return;
    }
    if(animhandle==191)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);
    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==203)
    {
        if(frame==0)
        {
            depost(1);
        }
        if(frame==1)
        {
            depost(1);
        }
        return;
    }
    if(animhandle==204)
    {
        if(frame==0)
        {
            slamstart3();
        }
        if(frame==0)
        {
            depost2(0, 1, 1, 1);
        }
        if(frame==0)
        {
            position(2, 20, 1, 0, -1);
        }
        if(frame==2)
        {
            position(2, 20, 1, 0, -1);
        }
        if(frame==2)
        {
            depost(0);
        }
        return;
    }
    if(animhandle==205)
    {
        if(frame==0)
        {
            slamstart3();
        }
        if(frame==0)
        {
            depost2(0, 1, 0, 1);
        }
        if(frame==0)
        {
            position(1, 20, -5, 0, -1);
        }
        if(frame==2)
        {
            position(1, 20, -5, 0, -1);
        }
        if(frame==2)
        {
            depost(0);
        }
        if(frame==2)
        {
            throw(30, 2, 0.5, 0.4, 0, 1);
        }
        if(frame==5)
        {
            dasher(-0.3, 0.5, 0);
        }
        return;
    }
    if(animhandle==208)
    {
        if(frame==1)
        {
            anichange("ani_freespecial2");
        }
        return;
    }
    if(animhandle==209)
    {
        if(frame==0)
        {
            slamstart2();
        }
        if(frame==0)
        {
            depost2(0, 1, 0, 1);
        }
        if(frame==0)
        {
            position(0, -5, 10, 0, -1);
        }
        if(frame==1)
        {
            position(1, -5, 10, 0, -1);
        }
        if(frame==2)
        {
            position(2, -30, 1, 0, -1);
        }
        if(frame==3)
        {
            throw(15, 2, 0.5, 0.4, 0, 1);
        }
        if(frame==3)
        {
            depost(0);
        }
        if(frame==3)
        {
            clearGrab();
        }
        return;
    }
    if(animhandle==210)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==211)
    {

    void self = getlocalvar("self");
    int Direction = getentityproperty(self, "direction");
    if (Direction == 0){            
      changeentityproperty(self, "direction", 1);
	  }
        return;
    }
    if(animhandle==212)
    {

    void self = getlocalvar("self");
    void P1 = getplayerproperty(0, "entity");
    void P2 = getplayerproperty(1, "entity");
    int eTime = openborvariant("elapsed_time");
        if(frame==0)
        {
            Join(1);
        }
        if(frame==0)
        {
            degravity(0.3);
        }
        if(frame==2)
        {
            degravity(0.5);
        }
        if(frame==2)
        {
            dasher(0.3, 0.6, 0);
        }
        if(frame==8)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0, 0, 0);
        }
        if(frame==9)
        {
            changeentityproperty(getlocalvar("self"), "velocity", 0.6, 0, 0);
        }
        if(frame==24)
        {
            Join(0);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Enemy_2/Enemy_2.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==248)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);
    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==249)
    {
        if(frame==0)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        if(frame==1)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        return;
    }
    if(animhandle==250)
    {
        if(frame==0)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        if(frame==1)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        return;
    }
    if(animhandle==254)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }
    if(animhandle==255)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Enemy_1/Enemy_1.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==262)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);

    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==263)
    {
        if(frame==0)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        if(frame==1)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        return;
    }
    if(animhandle==264)
    {
        if(frame==0)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        if(frame==1)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW3");
        }
        return;
    }
    if(animhandle==268)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }
    if(animhandle==269)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/misc/go.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==270)
    {
        if(frame==5)
        {
            killentity(getlocalvar("self"));
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/Enemy_3/Enemy_3.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==277)
    {

    void self = getlocalvar("self");
    changeentityproperty(self, "antigravity", 0);
    changeentityproperty(self, "Subject_to_Wall", 1);
    changeentityproperty(self, "Subject_to_MinZ", 1);
    changeentityproperty(self, "Subject_to_MaxZ", 1);
    changeentityproperty(self, "Subject_to_Gravity", 1);
    if(frame==1){
      setentityvar(self, 0, openborvariant("elapsed_time"));
    }
        return;
    }
    if(animhandle==279)
    {
        if(frame==0)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW2");
        }
        if(frame==1)
        {
            attack1(-30, 50, 50, "ANI_FOLLOW2");
        }
        return;
    }
    if(animhandle==285)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }
    if(animhandle==286)
    {
        if(frame==0)
        {
            degravity(0.5);
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/misc/clear.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==287)
    {
        if(frame==0)
        {
            clear(-2000, 2000, 800, 0, 400);
        }
        if(frame==1)
        {
            anichange("ANI_Follow1");
        }
        return;
    }

}

#### animationscript function main #####
# data/chars/misc/delay.txt
########################################
void main()
{
    int frame = getlocalvar("frame");
    int animhandle = getlocalvar("animhandle");
    if(animhandle==289)
    {

    void self = getlocalvar("self");
    int  Health = getentityproperty(self, "health");

    if(frame==1){
      changeentityproperty(self, "health", Health-5);
      if (Health <= 0){
        killentity(self);
      }
    }
        return;
    }

}
